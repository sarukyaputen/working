class HandicapFormat:

    def __init__(self, cent_line):
        """
        :param centline: +-0.75
        :return:
        """
        self.cent_line = cent_line

    def get(self):
        """
        :return: +0.5/1   -0.5/1

        """
        try:                                                                #0.5/1
            str_end = len(self.cent_line)
            str_in = self.cent_line.find('/')
            str_in_a = float(self.cent_line[0:str_in])
            str_in_b = float(self.cent_line[str_in+1:str_end])
            if str_in_a >= 0.1 and str_in_b >= 0.1 and str_in >= 1:
                if str_in_a >= 0.1:
                    return '+' + str(self.cent_line)
                if str_in_a <= 0:
                    return '-' + str(self.cent_line)

        except Exception as e:
                      pass
        try:
            number_a = abs(float(self.cent_line)*100)
            number_b = abs(float(self.cent_line))
            number_c = abs(round(float(self.cent_line)))
            number_d = str(abs(float(self.cent_line)))
            number_d = number_d[::-1]

            if number_d[0:1] == "0":
                return self.cent_line
            if number_a == 0:
                return str(number_a).replace(".0", '')

            if number_a % 25 == 0:
                if abs(number_b-number_c) == 0.25 or abs(number_b-number_c) == 0.75:
                    return_get = str(number_b-0.25) + '/' + str(number_b + 0.25)
                    return_get = return_get.replace(".0", '')

                    if float(self.cent_line) > 0.1:
                        return_get = "+" + return_get
                        return return_get

                    if float(self.cent_line) < 0.1:
                        return_get = "-" + return_get
                        return return_get

                    return return_get

            if number_a % 5 == 0:
                return_get = str(number_b)
                if float(self.cent_line) > 0.1:
                    return_get = "+" + return_get
                    return_get = return_get.replace(".0", '')
                    return return_get

                if float(self.cent_line) < 0.1:
                    return_get = "-" + return_get
                    return_get = return_get.replace(".0", '')
                    return return_get

                return return_get

        except Exception as e:
               print(e)

    def test(self, result):
        """
           :return: +0.5/1   -0.5/1
        """
        # print('get ', self.get(), type(self.get()))
        # print('result', result, type(result))
        # #
        return self.get() == result


if __name__ == '__main__':
    
    print('1', HandicapFormat(-0.25).test('-0/0.5'))
    print('2', HandicapFormat("100.25").test('+100/100.5'))
    print('3', HandicapFormat('-21.25').test('-21/21.5'))
    print('4', HandicapFormat('-4.75').test('-4.5/5'))
    print('5', HandicapFormat('0.5').test('+0.5'))
    print('6', HandicapFormat('21.5').test('+21.5'))
    print('7', HandicapFormat('+0.5').test('+0.5'))
    print('8', HandicapFormat('-8').test('-8'))
    print('9', HandicapFormat('4.50').test('+4.5'))
    print('10', HandicapFormat('0').test('0'))
    print('11', HandicapFormat('+1.0').test('+1.0'))
    print('12', HandicapFormat('0.5/1').test('+0.5/1'))
    print(HandicapFormat('4.7').test('+0.5/1'))#error
    print(HandicapFormat('abc').test('+0.5/1'))#error
    print(HandicapFormat("4.7").test('+0.5/1'))#ERROR
    print(HandicapFormat("-4.7").test('-0.5/1'))#ERROR
    print(HandicapFormat('??').test('+0.5/1'))#error
    print(HandicapFormat('yyy').test('+0.5/1'))#error



